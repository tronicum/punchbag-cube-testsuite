# Workspace Directory Rules for punchbag-cube-testsuite

- Always run Go commands (build, test, tidy, vendor, etc.) for a module inside that module's directory (e.g., run multitool commands in multitool/, not the workspace root).
- When editing or testing a module, always use the correct working directory for that module.
- Always check the current directory with `pwd` before running any Go command or script.
- If unsure about the current working directory, always run `pwd` first before proceeding. This applies especially when running Go commands or scripts, and should be done almost every time unless the context is absolutely clear.
- If in doubt, ask for clarification before running commands in the wrong directory.

# (Add more rules below as needed)
- Never start the server directly in the foreground; always use the provided control script to start, stop, or restart the server.
- Never run commands if the terminal is not available or is blocked by a foreground process. Always ensure you have a usable shell prompt before proceeding.
- After any tiny edit (e.g., a single line or small patch), always run a Go test (go test ./...) in the relevant module to catch issues early.
- Always check Go syntax (go fmt, go vet, or go build) before compiling or applying patches, to avoid syntax and patch errors.
- All scripts must use workspace-root-relative paths for all binaries and scripts, so they work regardless of the current working directory. This ensures robust automation and prevents path errors in CI and local runs.
Never proceed to the next step if any code, build, or test fails. Always stop, diagnose, and resolve errors before continuing.
If in doubt, check the TODOs or project documentation first, then ask what to do next.
