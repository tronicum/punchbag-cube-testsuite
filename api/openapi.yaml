openapi: 3.0.3
info:
  title: Punchbag Cube Test Suite API
  description: API for testing and managing multi-cloud Kubernetes clusters and punchbag cube functionality
  version: 2.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.punchbag-cube.example.com/api/v1
    description: Production server

paths:
  /clusters:
    get:
      summary: List all Kubernetes clusters
      tags:
        - Clusters
      parameters:
        - name: provider
          in: query
          required: false
          schema:
            type: string
            enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Filter clusters by cloud provider
      responses:
        '200':
          description: List of clusters
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cluster'
    post:
      summary: Create a new Kubernetes cluster
      tags:
        - Clusters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '201':
          description: Cluster created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '400':
          description: Invalid request data
        '409':
          description: Cluster already exists

  /clusters/{id}:
    get:
      summary: Get cluster by ID
      tags:
        - Clusters
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cluster details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '404':
          description: Cluster not found
    put:
      summary: Update cluster
      tags:
        - Clusters
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: Cluster updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '404':
          description: Cluster not found
    delete:
      summary: Delete cluster
      tags:
        - Clusters
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cluster deleted successfully
        '404':
          description: Cluster not found

  /clusters/{id}/tests:
    get:
      summary: List tests for a cluster
      tags:
        - Tests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of test results
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestResult'
    post:
      summary: Run a test on a cluster
      tags:
        - Tests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
      responses:
        '202':
          description: Test started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '404':
          description: Cluster not found

  /tests/{id}:
    get:
      summary: Get test result by ID
      tags:
        - Tests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test result details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '404':
          description: Test result not found

  /validate/{provider}:
    get:
      summary: Validate cloud provider configuration
      tags:
        - Provider Simulation
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider to validate
      responses:
        '200':
          description: Provider validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderValidation'
        '400':
          description: Unsupported provider

  /providers/{provider}/info:
    get:
      summary: Get information about a cloud provider
      tags:
        - Provider Simulation
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
      responses:
        '200':
          description: Provider information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInfo'
        '404':
          description: Provider not found

  /providers/{provider}/clusters:
    get:
      summary: List clusters for a specific provider
      tags:
        - Provider Simulation
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
      responses:
        '200':
          description: Provider-specific cluster list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderClusters'

  /providers/{provider}/operations/{operation}:
    post:
      summary: Execute provider-specific operation
      tags:
        - Provider Simulation
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
        - name: operation
          in: path
          required: true
          schema:
            type: string
          description: Operation to execute (e.g., create, scale, backup)
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              description: Operation-specific parameters
      responses:
        '200':
          description: Operation executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperation'

  /metrics/health:
    get:
      summary: Health check endpoint
      tags:
        - Monitoring
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time

  /metrics/status:
    get:
      summary: Service status and metrics
      tags:
        - Monitoring
      responses:
        '200':
          description: Service status
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: integer
                    description: Number of clusters
                  test_results:
                    type: integer
                    description: Number of test results
                  version:
                    type: string
                    description: API version

components:
  schemas:
    Cluster:
      type: object
      required:
        - name
        - cloud_provider
      properties:
        id:
          type: string
          description: Unique identifier for the cluster
        name:
          type: string
          description: Name of the Kubernetes cluster
        cloud_provider:
          type: string
          enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider hosting the cluster
        status:
          type: string
          enum: [creating, running, stopped, deleting, failed]
          description: Current status of the cluster
        config:
          type: object
          description: Provider-specific configuration
          oneOf:
            - $ref: '#/components/schemas/AzureConfig'
            - $ref: '#/components/schemas/HetznerConfig'
            - $ref: '#/components/schemas/IONOSConfig'
        created_at:
          type: string
          format: date-time
          description: Cluster creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    AzureConfig:
      type: object
      required:
        - resource_group
        - location
      properties:
        resource_group:
          type: string
          description: Azure resource group
        location:
          type: string
          description: Azure region
        kubernetes_version:
          type: string
          description: Kubernetes version
        node_count:
          type: integer
          description: Number of nodes in the cluster
        tags:
          type: object
          additionalProperties:
            type: string
          description: Tags associated with the cluster

    HetznerConfig:
      type: object
      required:
        - server_type
        - image
        - location
      properties:
        server_type:
          type: string
          description: Hetzner server type (e.g., cx11, cx21)
        image:
          type: string
          description: OS image for the servers
        location:
          type: string
          description: Hetzner datacenter location
        network:
          type: string
          description: Hetzner network ID
        ssh_keys:
          type: array
          items:
            type: string
          description: SSH key IDs
        firewalls:
          type: array
          items:
            type: string
          description: Firewall IDs
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels for the resources
        user_data:
          type: string
          description: Cloud-init user data
        backups:
          type: boolean
          description: Enable backups
        kubernetes_version:
          type: string
          description: Kubernetes version
        node_count:
          type: integer
          description: Number of nodes
        enable_ipv6:
          type: boolean
          description: Enable IPv6
        private_network_only:
          type: boolean
          description: Use private network only

    IONOSConfig:
      type: object
      required:
        - datacenter_id
        - cpu_family
        - cores
        - ram
      properties:
        datacenter_id:
          type: string
          description: IONOS datacenter ID
        cpu_family:
          type: string
          description: CPU family (e.g., AMD_OPTERON, INTEL_XEON)
        cores:
          type: integer
          description: Number of CPU cores
        ram:
          type: integer
          description: RAM in MB
        storage_type:
          type: string
          description: Storage type (HDD or SSD)
        storage_size:
          type: integer
          description: Storage size in GB
        location:
          type: string
          description: Datacenter location
        image_alias:
          type: string
          description: OS image alias
        ssh_keys:
          type: array
          items:
            type: string
          description: SSH key IDs
        properties:
          type: object
          additionalProperties:
            type: string
          description: Additional properties
        kubernetes_version:
          type: string
          description: Kubernetes version
        node_count:
          type: integer
          description: Number of nodes
        public_lan:
          type: boolean
          description: Enable public LAN
        dhcp_enabled:
          type: boolean
          description: Enable DHCP
        maintenance_window:
          type: string
          description: Maintenance window

    TestResult:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the test result
        cluster_id:
          type: string
          description: ID of the cluster being tested
        test_type:
          type: string
          description: Type of test being performed
        status:
          type: string
          enum: [pending, running, completed, failed]
          description: Current status of the test
        duration:
          type: string
          description: Test duration in nanoseconds
        details:
          type: object
          description: Test-specific details and metrics
        error_message:
          type: string
          description: Error message if test failed
        started_at:
          type: string
          format: date-time
          description: Test start timestamp
        completed_at:
          type: string
          format: date-time
          description: Test completion timestamp

    TestRequest:
      type: object
      required:
        - cluster_id
        - test_type
      properties:
        cluster_id:
          type: string
          description: ID of the cluster to test
        test_type:
          type: string
          enum: [load_test, connectivity_test, performance_test, stress_test]
          description: Type of test to perform
        config:
          type: object
          description: Test-specific configuration parameters

    AKSCluster:
      type: object
      required:
        - name
        - resource_group
        - location
      properties:
        id:
          type: string
          description: Unique identifier for the cluster
        name:
          type: string
          description: Name of the AKS cluster
        resource_group:
          type: string
          description: Azure resource group
        location:
          type: string
          description: Azure region
        kubernetes_version:
          type: string
          description: Kubernetes version
        status:
          type: string
          enum: [creating, running, stopped, deleting, failed]
          description: Current status of the cluster
        node_count:
          type: integer
          description: Number of nodes in the cluster
        tags:
          type: object
          additionalProperties:
            type: string
          description: Tags associated with the cluster
        created_at:
          type: string
          format: date-time
          description: Cluster creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    AKSTestResult:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the test result
        cluster_id:
          type: string
          description: ID of the cluster being tested
        test_type:
          type: string
          description: Type of test being performed
        status:
          type: string
          enum: [pending, running, completed, failed]
          description: Current status of the test
        duration:
          type: string
          description: Test duration in nanoseconds
        details:
          type: object
          description: Test-specific details and metrics
        error_message:
          type: string
          description: Error message if test failed
        started_at:
          type: string
          format: date-time
          description: Test start timestamp
        completed_at:
          type: string
          format: date-time
          description: Test completion timestamp

    AKSTestRequest:
      type: object
      required:
        - cluster_id
        - test_type
      properties:
        cluster_id:
          type: string
          description: ID of the cluster to test
        test_type:
          type: string
          enum: [load_test, connectivity_test, performance_test, stress_test]
          description: Type of test to perform
        config:
          type: object
          description: Test-specific configuration parameters

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    ProviderValidation:
      type: object
      properties:
        provider:
          type: string
          enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider
        valid:
          type: boolean
          description: Whether the provider configuration is valid
        errors:
          type: array
          items:
            type: string
          description: List of validation error messages

    ProviderInfo:
      type: object
      properties:
        provider:
          type: string
          enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider
        description:
          type: string
          description: Provider description
        documentation_url:
          type: string
          format: uri
          description: URL to provider documentation
        console_url:
          type: string
          format: uri
          description: URL to provider console
        api_url:
          type: string
          format: uri
          description: URL to provider API
        regions:
          type: array
          items:
            type: string
          description: List of available regions for the provider

    ProviderClusters:
      type: object
      properties:
        provider:
          type: string
          enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: List of clusters for the provider

    ProviderOperation:
      type: object
      properties:
        provider:
          type: string
          enum: [azure, aws, gcp, schwarz-stackit, hetzner-hcloud, united-ionos]
          description: Cloud provider
        operation:
          type: string
          description: Name of the executed operation
        status:
          type: string
          enum: [pending, running, completed, failed]
          description: Current status of the operation
        details:
          type: object
          description: Operation-specific details and metrics
        error_message:
          type: string
          description: Error message if operation failed
        started_at:
          type: string
          format: date-time
          description: Operation start timestamp
        completed_at:
          type: string
          format: date-time
          description: Operation completion timestamp

tags:
  - name: Clusters
    description: Multi-cloud Kubernetes cluster management operations
  - name: Tests
    description: Test execution and result management
  - name: Monitoring
    description: Health and status monitoring endpoints
  - name: Provider Simulation
    description: Cloud provider simulation and validation endpoints
